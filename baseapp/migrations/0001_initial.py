# Generated by Django 5.0.4 on 2024-04-17 11:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Educational_Content',
            fields=[
                ('ContentID', models.AutoField(primary_key=True, serialize=False)),
                ('Title', models.CharField(max_length=50)),
                ('Content_Description', models.CharField(max_length=50)),
                ('Content_Type', models.CharField(max_length=50)),
                ('Content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dob', models.DateField()),
                ('location', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Community_Posts',
            fields=[
                ('PostID', models.AutoField(primary_key=True, serialize=False)),
                ('Post_Date', models.DateField()),
                ('Content', models.TextField()),
                ('Likes', models.BigIntegerField()),
                ('Comments', models.BigIntegerField()),
                ('Author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pets',
            fields=[
                ('PetID', models.AutoField(primary_key=True, serialize=False)),
                ('Pet_Name', models.CharField(max_length=50)),
                ('Species', models.CharField(max_length=50)),
                ('Breed', models.CharField(max_length=50)),
                ('Age', models.PositiveIntegerField()),
                ('Gender', models.CharField(max_length=10)),
                ('Health_Status', models.CharField(max_length=50)),
                ('Happiness_Level', models.CharField(max_length=50)),
                ('Hunger_Level', models.CharField(max_length=50)),
                ('Hygiene_Level', models.CharField(max_length=50)),
                ('Exercise_Level', models.CharField(max_length=50)),
                ('Owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pet_Care_Logs',
            fields=[
                ('LogID', models.AutoField(primary_key=True, serialize=False)),
                ('Activity_Date', models.DateField()),
                ('Actviity_Type', models.CharField(max_length=100)),
                ('Happiness_Change', models.IntegerField()),
                ('Hunger_Change', models.IntegerField()),
                ('Hygiene_Change', models.IntegerField()),
                ('Exercise_Change', models.IntegerField()),
                ('Pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseapp.pets')),
            ],
        ),
        migrations.CreateModel(
            name='Adoption_Requests',
            fields=[
                ('RequestID', models.AutoField(primary_key=True, serialize=False)),
                ('Request_Date', models.DateField()),
                ('Approval_Status', models.CharField(max_length=10)),
                ('Requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('Pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseapp.pets')),
            ],
        ),
        migrations.CreateModel(
            name='User_Pets',
            fields=[
                ('UserPetID', models.AutoField(primary_key=True, serialize=False)),
                ('Adoption_Date', models.DateField()),
                ('Pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseapp.pets')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
